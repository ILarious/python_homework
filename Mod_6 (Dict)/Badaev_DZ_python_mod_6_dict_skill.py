from typing import List, Dict

# =============================================================================
# =============================================================================

# /~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\========/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
# |~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~{ TASK 1 }~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|
# | Приложение для удобного прослушивания музыки, песни хранятся в виде       |
# | словаря. Каждая песня состоит из названия и продолжительности с           |
# | точностью до долей минут. Напишите программу, которая запрашивает у       |
# | пользователя количество песен из списка и их названия, а на экран выводит |
# | общее время их звучания.                                                  |
# \~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/========\~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/

violator_songs: Dict[str, float] = {
    'World in My Eyes': 4.86,
    'Sweetest Perfection': 4.43,
    'Personal Jesus': 4.56,
    'Halo': 4.9,
    'Waiting for the Night': 6.07,
    'Enjoy the Silence': 4.20,
    'Policy of Truth': 4.76,
    'Blue Dress': 4.29,
    'Clean': 5.83
}

mess: str = 'Введите название песен через запятую\n--> '
reg: List[str] = list(map(str.strip, input(mess).split(',')))
total_time: float = 0

for song in reg:
    if song in violator_songs:
        total_time += violator_songs[song]
    else:
        print(f'Песня "{song}" не найдена')

print(f'Общее время: {total_time}')


# /~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\========/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
# |~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~{ TASK 2 }~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|
# | При работе с API (application programming interface) сайта биржи по       |
# | криптовалюте, вы получили такие данные в виде словаря:                    |
# | Напишите программу, которая выполняет следующий алгоритм действий:        |
# | 1.	Вывести списки ключей и значений словаря.                             |
# | 2.	В ETH добавить ключ total_diff со значением 100.                      |
# | 3.	Внутри fst_token_info значение ключа name поменять с fdf на doge.     |
# | 4.	Удалить total_out из tokens и присвоить его значение в total_out      |
# | внутри ETH.                                                               |
# | 5.	Внутри sec_token_info изменить название ключа price на total_price.   |
# | После выполнения алгоритма выводить результат.                            |
# \~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/========\~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/

data = {
    "address": "0x544444444444",
    "ETH": {
        "balance": 444,
        "totalIn": 444,
        "totalOut": 4
    },
    "count_txs": 2,
    "tokens": [
        {
            "fst_token_info": {
                "address": "0x44444",
                "name": "fdf",
                "decimals": 0,
                "symbol": "dsfdsf",
                "total_supply": "3228562189",
                "owner": "0x44444",
                "last_updated": 1519022607901,
                "issuances_count": 0,
                "holders_count": 137528,
                "price": False
            },
            "balance": 5000,
            "totalIn": 0,
            "total_out": 0
        },
        {
            "sec_token_info": {
                "address": "0x44444",
                "name": "ggg",
                "decimals": "2",
                "symbol": "fff",
                "total_supply": "250000000000",
                "owner": "0x44444",
                "last_updated": 1520452201,
                "issuances_count": 0,
                "holders_count": 20707,
                "price": False
            },
            "balance": 500,
            "totalIn": 0,
            "total_out": 0
        }
    ]
}
